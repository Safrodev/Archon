plugins {
	id 'fabric-loom' version '1.2-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url 'https://ladysnake.jfrog.io/artifactory/mods' }

	maven { url 'https://maven.blamejared.com' }

	maven { url 'https://jitpack.io' }

	maven { url "https://maven.shedaniel.me" }

	maven { url "https://maven.terraformersmc.com" }

	maven { url 'https://api.modrinth.com/maven' }

	maven { url 'https://maven.draylar.dev/releases' }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Saflib
	modImplementation include("maven.modrinth:saflib:${project.lib_version}")

	// CCA (Base + Entity module)
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}"
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}"
	include "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}"
	include "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}"

	// Omega Config
	modImplementation include("dev.draylar.omega-config:omega-config-base:${project.config_version}")

	// Patchouli (Runtime only)
	modCompileOnly modRuntimeOnly("vazkii.patchouli:Patchouli:${project.patchouli_version}"),{
		exclude(group: "net.fabricmc.fabric-api")
	}

	// REI (Runtime only)
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"
	modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin:${project.rei_version}"

	// EMI (Compile only)
	modCompileOnly "dev.emi:emi-fabric:${project.emi_version}:api"

	// ModMenu (Runtime only)
	modCompileOnly modRuntimeOnly("com.terraformersmc:modmenu:${project.modmenu_version}"), {
				exclude(group: "net.fabricmc.fabric-api")
	}

	// SpellPower (Not on 1.20 yet)
//	modCompileOnly "maven.modrinth:spell-power:${project.sp_version}-fabric"
}

loom {
	accessWidenerPath = file("src/main/resources/archon.accesswidener")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
	}
}
